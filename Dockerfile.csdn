# Docker dlib installation solution based on CSDN tutorials (adapted for Debian 12)
FROM python:3.11-slim

# Set working directory
WORKDIR /app

# Method 1: Install complete compilation environment (adapted for Debian 12)
RUN apt-get update && apt-get install -y \
    build-essential \
    cmake \
    curl \
    git \
    libblas-dev \
    liblapack-dev \
    gfortran \
    libhdf5-dev \
    libhdf5-serial-dev \
    python3-dev \
    python3-pip \
    python3-venv \
    pkg-config \
    libx11-dev \
    libgtk-3-dev \
    libboost-python-dev \
    wget \
    && rm -rf /var/lib/apt/lists/*

# Install Miniconda
RUN wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O /tmp/miniconda.sh \
    && bash /tmp/miniconda.sh -b -p /opt/conda \
    && rm /tmp/miniconda.sh

# Add conda to PATH
ENV PATH="/opt/conda/bin:$PATH"

# Method 2: Use conda to install dlib (CSDN recommended method)
RUN conda install -c conda-forge dlib -y

# Accept conda terms of service
RUN conda tos accept --override-channels --channel https://repo.anaconda.com/pkgs/main && conda tos accept --override-channels --channel https://repo.anaconda.com/pkgs/r

# Use conda to install dlib (faster)
RUN conda install -c conda-forge dlib -y

# Install other Python dependencies
COPY requirements.txt .
RUN pip install -r requirements.txt

# Copy project files
COPY . .

# Expose port
EXPOSE 8501

# Health check
HEALTHCHECK CMD curl --fail http://localhost:8501/_stcore/health

# Start command
CMD ["streamlit", "run", "app.py", "--server.port=8501", "--server.address=0.0.0.0"]
